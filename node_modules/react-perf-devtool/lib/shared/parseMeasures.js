'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

/**
 This function returns the component name and phase name from the measure name (returned from React performance data).
 This may break if React changes the mark name (measure name).
*/
var getComponentAndPhaseName = function getComponentAndPhaseName(measure) {
  if (measure.name.includes('⚛')) {
    var index = measure.name.split('⚛ ').join('');

    // "App [mount]"
    if (/\[\w+\]/.test(index)) {
      var _index$split = index.split(' '),
          _index$split2 = _slicedToArray(_index$split, 2),
          componentName = _index$split2[0],
          phase = _index$split2[1];

      return {
        componentName: componentName,
        phase: phase
      };
    } else if (/\w+\.\w+/.test(index)) {
      // App.componentWillMount
      var _index$split3 = index.split('.'),
          _index$split4 = _slicedToArray(_index$split3, 2),
          _componentName = _index$split4[0],
          lifecycle = _index$split4[1];

      return {
        componentName: _componentName,
        phase: lifecycle
      };
    } else {
      return null;
    }
  } else if (measure.name.includes('⛔')) {
    var _index = measure.name.split('⛔ ').join('');

    if (/\w+\.\w+/.test(_index)) {
      return {
        componentName: _index.split('.')[0],
        phase: _index.split('.')[1].split(' Warning:')[0]
      };
    } else {
      return null;
    }
  }

  return null;
};

exports.getComponentAndPhaseName = getComponentAndPhaseName;